# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
permissions: read-all
jobs:
  build:
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Build
        run: go build -v ./...
  test:
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
      - uses: brian-pickens/go-test-report@v1
        with:
          packages: "./..."
          summary: "true"
  coverage:
    permissions:
      contents: write
      packages: read
      # To report GitHub Actions status checks
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
      - uses: gwatts/go-coverage-action@v2
        id: coverage
        with:
          coverage-threshold: 80
          cover-pkg: ./...
          ignore-pattern: |
            \.pb\.go$
            \_string\.go$
      - name: Generate coverage tree map
        run: |
          go run github.com/nikolaydubina/go-cover-treemap@latest \
          -coverprofile ${{ steps.coverage.outputs.gocov-agg-pathname }} \
          -only-folders=true >/tmp/treemap.svg
  lint:
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Super-linter
        uses: super-linter/super-linter@v6.6.0 # x-release-please-version
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
